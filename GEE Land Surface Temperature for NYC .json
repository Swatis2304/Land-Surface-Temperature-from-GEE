#https://code.earthengine.google.com/?scriptPath=users%2Farswatisharma2304%2FLST_LANDSAT_NYC%3AMEAN%20MAX%20MEDIAN%20LST%20NYC

// Function to calculate LST from Landsat 8 and 9 data
function calculateLST(image) {
    // Select the thermal band
    var thermalBand = image.select('ST_B10');
    // Convert the thermal band to brightness temperature (in Kelvin)
    var brightnessTemp = thermalBand.multiply(0.00341802).add(149.0);
    // Calculate NDVI for emissivity correction
    var ndvi = image.normalizedDifference(['SR_B5', 'SR_B4']);
    // Calculate Proportion of Vegetation (Pv)
    var proportionVeg = ndvi.expression(
        '((ndvi - ndviMin) / (ndviMax - ndviMin)) ** 2', {
            'ndvi': ndvi,
            'ndviMin': 0.2, // These values are placeholders, adjust as necessary
            'ndviMax': 0.5
        }
    ).rename('Proportion_Vegetation');
    // Estimate emissivity using proportion of vegetation
    var emissivity = proportionVeg.expression(
        '0.004 * proportionVeg + 0.986', {
            'proportionVeg': proportionVeg
        }
    ).rename('emissivity');
    // Calculate LST in Celsius
    var lst = brightnessTemp.expression(
        '(Tb / (1 + (0.00115 * Tb / 14388) * log(emissivity))) - 273.15', {
            'Tb': brightnessTemp,
            'emissivity': emissivity
        }
    ).rename('LST');
    return image.addBands(lst);
}

// Function to mask clouds using the QA_PIXEL band
function maskClouds(image) {
    var qa = image.select('QA_PIXEL');
    var cloud = qa.bitwiseAnd(1 << 3).or(qa.bitwiseAnd(1 << 4));
    return image.updateMask(cloud.not());
}

// Define your study area (New York City)
var studyArea = ee.Geometry.Rectangle([-74.2591, 40.4774, -73.7004, 40.9176]);

// Load the updated Landsat 8 and 9 collections
var landsat8Collection = ee.ImageCollection('LANDSAT/LC08/C02/T1_L2')
    .filterBounds(studyArea)
    .filterDate('2022-01-01', '2022-12-31')
    .map(maskClouds)
    .map(calculateLST);

// Calculate mean, max, and median LST
var meanLST = landsat8Collection.select('LST').mean(); // Mean LST
var maxLST = landsat8Collection.select('LST').max(); // Maximum LST
var medianLST = landsat8Collection.select('LST').median(); // Median LST

// Clip the LST images to the NYC bounding box
var meanLST_clipped = meanLST.clip(studyArea);
var maxLST_clipped = maxLST.clip(studyArea);
var medianLST_clipped = medianLST.clip(studyArea);

// Visualize the LST images
Map.centerObject(studyArea, 10); // Center the map on the study area
Map.addLayer(meanLST_clipped, {min: 15, max: 40, palette: ['blue', 'yellow', 'red']}, 'Mean LST');
Map.addLayer(maxLST_clipped, {min: 15, max: 70, palette: ['blue', 'yellow', 'red']}, 'Max LST');
Map.addLayer(medianLST_clipped, {min: 15, max: 40, palette: ['blue', 'yellow', 'red']}, 'Median LST');

// Export the mean LST image
Export.image.toDrive({
    image: meanLST_clipped,
    description: 'Mean_LST_Landsat8_9_NYC_Clipped',
    scale: 30,
    region: studyArea,
    maxPixels: 1e13
});

// Export the max LST image
Export.image.toDrive({
    image: maxLST_clipped,
    description: 'Max_LST_Landsat8_9_NYC_Clipped',
    scale: 30,
    region: studyArea,
    maxPixels: 1e13
});

// Export the median LST image
Export.image.toDrive({
    image: medianLST_clipped,
    description: 'Median_LST_Landsat8_9_NYC_Clipped',
    scale: 30,
    region: studyArea,
    maxPixels: 1e13
});